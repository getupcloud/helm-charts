{{- with or (get .Values.policy "marvin-m-201-app-credentials") (dict "_" "_") }}
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingAdmissionPolicy
metadata:
  name: {{ default "marvin-m-201-app-credentials" .nameOverride }}
  labels:
    {{- include "vap.labels" $ | nindent 4 }}
spec:
  failurePolicy: {{ default $.Values.defaultFailurePolicy .failurePolicy }}
  matchConstraints:
    resourceRules:
    - apiGroups:
      - ''
      apiVersions:
      - v1
      resources:
      - pods
      - configmaps
      operations:
      - CREATE
      - UPDATE
    - apiGroups:
      - apps
      apiVersions:
      - v1
      resources:
      - deployments
      - daemonsets
      - statefulsets
      - replicasets
      operations:
      - CREATE
      - UPDATE
    - apiGroups:
      - batch
      apiVersions:
      - v1
      resources:
      - cronjobs
      - jobs
      operations:
      - CREATE
      - UPDATE
  paramKind:
   apiVersion: v1
   kind: VAPConfig
  variables:
  - name: podMeta
    expression: |-
      has(object.spec.containers) ? object.metadata :
        has(object.spec.template) ? object.spec.template.metadata :
        has(object.spec.jobTemplate.spec.template.metadata) ?  object.spec.jobTemplate.spec.template.metadata :
        {}
  - name: podSpec
    expression: |-
      has(object.spec.containers) ? object.spec :
        has(object.spec.template) ? object.spec.template.spec :
        has(object.spec.jobTemplate.spec.template.spec) ?  object.spec.jobTemplate.spec.template.spec :
        {}
  - name: podContainers
    expression: |-
      object.spec.?containers.orValue([]) + object.spec.?initContainers.orValue([]) + object.spec.?ephemeralContainers.orValue([])
  - name: workloadContainers
    expression: |-
      object.spec.?template.spec.containers.orValue([]) + object.spec.?template.spec.initContainers.orValue([])
  - name: cronjobContainers
    expression: |-
      object.spec.?jobTemplate.spec.template.spec.containers.orValue([]) + object.spec.?jobTemplate.spec.template.spec.containers.orValue([])
  - name: allContainers
    expression: |-
      variables.podContainers + variables.workloadContainers + variables.cronjobContainers

  validations:
  - expression: |-
      object.kind != 'ConfigMap' || !has(object.data) || object.data.all(key, 
        !params.settings.sensitiveKeys.exists(sensitiveKey,
          key.lowerAscii().contains(sensitiveKey)
        ) &&
        !params.settings.sensitiveValues.exists(sensitiveValue,
          object.data[key].matches(sensitiveValue)
        )
      )
    message: 'ConfigMap could be storing sensitive data'
    messageExpression: ''
    reason: Invalid
  - expression: |-
      variables.allContainers.all(container,
        !has(container.env) ||
        container.env.all(env,
          !params.settings.sensitiveKeys.exists(sensitiveKey,
            env.name.lowerAscii().contains(sensitiveKey)
          ) &&
          (!has(env.value) ||
            !params.settings.sensitiveValues.exists(sensitiveValue,
              env.value.matches(sensitiveValue)
            )
          )
        )
      )
    message: 'Container could be storing sensitive data as environment variable'
    messageExpression: ''
    reason: Invalid

{{- end }}
